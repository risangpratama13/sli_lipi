-----------Tabel users---------
+balance_id => NULL

-----------Tabel Balances---------
+Truncate

-----------Tabel Balance Logs-------
+Truncate

-----------Tabel Items-----------
+Truncate
+Tambah kolom author_num default value = 1 type = int
+Trigger pada tabel Item diubah

SET new_point = idr_new_point / kurs => SET new_point = (idr_new_point / kurs) / NEW.author_num;

----------Tabel Member---------
+Truncate

----------Tabel Operator---------
+Truncate

----------Tabel Order------------
+Truncate

----------Tabel Researchers--------
+Truncate.
+Perubahan Data Pada tabel Researchers. (Data Baru Terlampir)

----------Tabel Researches--------
+Truncate.
+Perubahan Data Pada tabel Researches. (Data Baru Terlampir)

----------Tabel Kurs Point-------
+Tambah Kolom init_point dan test_point_result tipe data double
+Insert value untuk init_point dan test_point_result masing masing 16000000 dan 10

----------Trigger update_balance_order------------
+Penambahan Syntax menjadi:

BEGIN

DECLARE id_balance INT;
DECLARE id_user INT;
DECLARE old_point DOUBLE;
DECLARE kurs DOUBLE;

DECLARE idr_point DOUBLE;
DECLARE o_test_percent DOUBLE;
DECLARE new_point DOUBLE;
DECLARE total DOUBLE;
DECLARE subtotal DOUBLE;
DECLARE name VARCHAR(255);

IF NEW.status = "D" THEN
	SELECT user_id INTO id_user FROM orders WHERE id = NEW.order_id; 
	SELECT balance_id INTO id_balance FROM users WHERE id = id_user;
	SELECT idr INTO kurs FROM kurs_point WHERE id = 1;	
	SELECT value INTO old_point FROM balances WHERE id = id_balance;	
	SET idr_point = old_point * kurs;

	SET total = idr_point + NEW.subtotal;
	SET new_point = total / kurs;	
	UPDATE balances SET value = new_point WHERE id = id_balance;
	DELETE FROM balance_logs WHERE item_test_id = NEW.id AND trans_type_detail = "test_order";
ELSEIF NEW.status = "F" AND NEW.url_file = "" THEN
	SELECT user_id INTO id_user FROM operators WHERE id = NEW.operator_id; 
	SELECT balance_id INTO id_balance FROM users WHERE id = id_user;
	SELECT idr INTO kurs FROM kurs_point WHERE id = 1;
	SELECT test_percent INTO o_test_percent FROM kurs_point WHERE id = 1;
	SELECT value INTO old_point FROM balances WHERE id = id_balance;	
	SET idr_point = old_point * kurs;

	SELECT testing_name INTO name FROM tests WHERE id = NEW.test_id;
	SET subtotal = o_test_percent * NEW.subtotal;
	SET total = subtotal + idr_point;
	SET new_point = total / kurs;
	UPDATE balances SET value = new_point WHERE id = id_balance;
	INSERT INTO balance_logs VALUES('',id_user, NEW.id, NOW(), "D", "pengujian", subtotal, name);
END IF;

END